/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { DSGD, DSGDInterface } from "../../contracts/DSGD";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040518060400160405280601981526020017f4469676974616c2053696e6761706f726520446f6c6c61727300000000000000815250604051806040016040528060048152602001631114d1d160e21b815250816003908162000076919062000148565b50600462000085828262000148565b50620000919150503390565b6001600160a01b031660805262000214565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ce57607f821691505b602082108103620000ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014357600081815260208120601f850160051c810160208610156200011e5750805b601f850160051c820191505b818110156200013f578281556001016200012a565b5050505b505050565b81516001600160401b03811115620001645762000164620000a3565b6200017c81620001758454620000b9565b84620000f5565b602080601f831160018114620001b457600084156200019b5750858301515b600019600386901b1c1916600185901b1785556200013f565b600085815260208120601f198616915b82811015620001e557888601518255948401946001909101908401620001c4565b5085821015620002045787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610be26200023e600039600081816101ba01528181610388015261040e0152610be26000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146101fc578063a457c2d71461020f578063a9059cbb14610222578063dd62ed3e1461023557600080fd5b806370a082311461018c5780638da5cb5b146101b557806395d89b41146101f457600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761026e565b6040516101049190610a55565b60405180910390f35b61012061011b366004610abf565b610300565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610ae9565b61031a565b60405160128152602001610104565b610120610172366004610abf565b61033e565b61018a610185366004610abf565b61037d565b005b61013461019a366004610b25565b6001600160a01b031660009081526020819052604090205490565b6101dc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610104565b6100f76103f4565b61018a61020a366004610abf565b610403565b61012061021d366004610abf565b610471565b610120610230366004610abf565b610503565b610134610243366004610b47565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461027d90610b7a565b80601f01602080910402602001604051908101604052809291908181526020018280546102a990610b7a565b80156102f65780601f106102cb576101008083540402835291602001916102f6565b820191906000526020600020905b8154815290600101906020018083116102d957829003601f168201915b5050505050905090565b60003361030e818585610511565b60019150505b92915050565b600033610328858285610636565b6103338585856106c8565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061030e9082908690610378908790610bb4565b610511565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e65760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6103f0828261086c565b5050565b60606004805461027d90610b7a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104675760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103dd565b6103f0828261092b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b6103338286868403610511565b60003361030e8185856106c8565b6001600160a01b0383166105735760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b0382166105d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106c257818110156106b55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103dd565b6106c28484848403610511565b50505050565b6001600160a01b03831661072c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b038316600090815260208190526040902054818110156108065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106c2565b6001600160a01b0382166108c25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dd565b80600260008282546108d49190610bb4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661098b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103dd565b6001600160a01b038216600090815260208190526040902054818110156109ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103dd565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610629565b600060208083528351808285015260005b81811015610a8257858101830151858201604001528201610a66565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610aba57600080fd5b919050565b60008060408385031215610ad257600080fd5b610adb83610aa3565b946020939093013593505050565b600080600060608486031215610afe57600080fd5b610b0784610aa3565b9250610b1560208501610aa3565b9150604084013590509250925092565b600060208284031215610b3757600080fd5b610b4082610aa3565b9392505050565b60008060408385031215610b5a57600080fd5b610b6383610aa3565b9150610b7160208401610aa3565b90509250929050565b600181811c90821680610b8e57607f821691505b602082108103610bae57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031457634e487b7160e01b600052601160045260246000fdfea164736f6c6343000813000a";

type DSGDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DSGDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DSGD__factory extends ContractFactory {
  constructor(...args: DSGDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DSGD> {
    return super.deploy(overrides || {}) as Promise<DSGD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DSGD {
    return super.attach(address) as DSGD;
  }
  override connect(signer: Signer): DSGD__factory {
    return super.connect(signer) as DSGD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DSGDInterface {
    return new utils.Interface(_abi) as DSGDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DSGD {
    return new Contract(address, _abi, signerOrProvider) as DSGD;
  }
}
