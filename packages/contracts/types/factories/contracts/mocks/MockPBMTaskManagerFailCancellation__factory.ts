/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MockPBMTaskManagerFailCancellation,
  MockPBMTaskManagerFailCancellationInterface,
} from "../../../contracts/mocks/MockPBMTaskManagerFailCancellation";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotFundsOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskCallerNotPBM",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskExists",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorisedCaller",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "WithdrawalTaskExecution",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cancelWithdrawalTask",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "createWithdrawalTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "execWithdrawal",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTaskId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061015e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630baddc9a14610051578063cd5a3b7014610079578063d44bc0881461008d578063ec122d0a146100af575b600080fd5b61006461005f3660046100f3565b6100bd565b60405190151581526020015b60405180910390f35b61008b6100873660046100f3565b5050565b005b6100a161009b366004610138565b50600090565b604051908152602001610070565b61006461009b366004610138565b60405160019081906000907fd5f4ed018c0f63ae293a331b01a481632d320a61c69761c6e8042783adb32a8e908290a392915050565b6000806040838503121561010657600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461012a57600080fd5b946020939093013593505050565b60006020828403121561014a57600080fd5b503591905056fea164736f6c6343000813000a";

type MockPBMTaskManagerFailCancellationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPBMTaskManagerFailCancellationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPBMTaskManagerFailCancellation__factory extends ContractFactory {
  constructor(...args: MockPBMTaskManagerFailCancellationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPBMTaskManagerFailCancellation> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockPBMTaskManagerFailCancellation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPBMTaskManagerFailCancellation {
    return super.attach(address) as MockPBMTaskManagerFailCancellation;
  }
  override connect(
    signer: Signer
  ): MockPBMTaskManagerFailCancellation__factory {
    return super.connect(signer) as MockPBMTaskManagerFailCancellation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPBMTaskManagerFailCancellationInterface {
    return new utils.Interface(
      _abi
    ) as MockPBMTaskManagerFailCancellationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPBMTaskManagerFailCancellation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPBMTaskManagerFailCancellation;
  }
}
