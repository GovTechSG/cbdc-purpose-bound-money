/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PBMAccessControlErrors,
  PBMAccessControlErrorsInterface,
} from "../../../contracts/interfaces/PBMAccessControlErrors";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "AccountHasNoRole",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAdminAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "RenounceRoleNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "UnauthorisedCaller",
    type: "error",
  },
] as const;

export class PBMAccessControlErrors__factory {
  static readonly abi = _abi;
  static createInterface(): PBMAccessControlErrorsInterface {
    return new utils.Interface(_abi) as PBMAccessControlErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PBMAccessControlErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PBMAccessControlErrors;
  }
}
