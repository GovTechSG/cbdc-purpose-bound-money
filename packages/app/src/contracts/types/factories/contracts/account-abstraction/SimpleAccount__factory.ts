/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../../contracts/account-abstraction/SimpleAccount";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "curve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "credentialIdHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "publicKey",
        type: "uint256[2]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "EC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "credentialIdHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_credentialIdHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "_publicKey",
        type: "uint256[2]",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0604052306080523480156200001557600080fd5b5060405162001f1c38038062001f1c833981016040819052620000389162000138565b6001600160a01b0380831660c052811660a052620000556200005d565b505062000177565b600054610100900460ff1615620000ca5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156200011d576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013557600080fd5b50565b600080604083850312156200014c57600080fd5b825162000159816200011f565b60208401519092506200016c816200011f565b809150509250929050565b60805160a05160c051611d2f620001ed600039600081816103690152818161068c0152818161070d01528181610aae01528181610b4601528181610b800152610df70152600061030201526000818161058f015281816105cf0152818161079e015281816107de01526108710152611d2f6000f3fe60806040526004361061012d5760003560e01c80638940aebe116100ab578063b0d691fe1161006f578063b0d691fe1461035a578063b61d27f61461038d578063bc197c81146103ad578063c399ec88146103dc578063d087d288146103f1578063f23a6e611461040657600080fd5b80638940aebe146102985780638da5cb5b146102b8578063a08b3367146102f0578063a29906bc14610324578063a47ba0321461033a57600080fd5b80633a871cdd116100f25780633a871cdd1461021a5780634a58db19146102485780634d44560d146102505780634f1ef2861461027057806352d1902d1461028357600080fd5b806223de291461013957806301ffc9a714610160578063150b7a021461019557806318dfb3c7146101da5780633659cfe6146101fa57600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061015e610154366004611584565b5050505050505050565b005b34801561016c57600080fd5b5061018061017b366004611634565b610433565b60405190151581526020015b60405180910390f35b3480156101a157600080fd5b506101c16101b036600461165e565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161018c565b3480156101e657600080fd5b5061015e6101f5366004611714565b610485565b34801561020657600080fd5b5061015e61021536600461177f565b610585565b34801561022657600080fd5b5061023a61023536600461179c565b610664565b60405190815260200161018c565b61015e61068a565b34801561025c57600080fd5b5061015e61026b3660046117ef565b610703565b61015e61027e366004611861565b610794565b34801561028f57600080fd5b5061023a610864565b3480156102a457600080fd5b5061023a6102b3366004611908565b610917565b3480156102c457600080fd5b506004546102d8906001600160a01b031681565b6040516001600160a01b03909116815260200161018c565b3480156102fc57600080fd5b506102d87f000000000000000000000000000000000000000000000000000000000000000081565b34801561033057600080fd5b5061023a60015481565b34801561034657600080fd5b5061015e610355366004611921565b61092e565b34801561036657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d8565b34801561039957600080fd5b5061015e6103a83660046119b7565b610a45565b3480156103b957600080fd5b506101c16103c8366004611a06565b63bc197c8160e01b98975050505050505050565b3480156103e857600080fd5b5061023a610a8e565b3480156103fd57600080fd5b5061023a610b1f565b34801561041257600080fd5b506101c1610421366004611aa3565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b148061046457506001600160e01b03198216630271189760e51b145b8061047f57506001600160e01b031982166301ffc9a760e01b145b92915050565b61048d610b75565b8281146104d75760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b8381101561057e5761056c8585838181106104f7576104f7611b1e565b905060200201602081019061050c919061177f565b600085858581811061052057610520611b1e565b90506020028101906105329190611b34565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c0492505050565b8061057681611b7a565b9150506104da565b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105cd5760405162461bcd60e51b81526004016104ce90611ba1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610616600080516020611cdc833981519152546001600160a01b031690565b6001600160a01b03161461063c5760405162461bcd60e51b81526004016104ce90611bed565b61064581610c74565b6040805160008082526020820190925261066191839190610c7c565b50565b600061066e610dec565b6106788484610e64565b905061068382610f37565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b1580156106ef57600080fd5b505af115801561057e573d6000803e3d6000fd5b61070b610f84565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107dc5760405162461bcd60e51b81526004016104ce90611ba1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610825600080516020611cdc833981519152546001600160a01b031690565b6001600160a01b03161461084b5760405162461bcd60e51b81526004016104ce90611bed565b61085482610c74565b61086082826001610c7c565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109045760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104ce565b50600080516020611cdc83398151915290565b6002816002811061092757600080fd5b0154905081565b600054610100900460ff161580801561094e5750600054600160ff909116105b806109685750303b158015610968575060005460ff166001145b6109cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ce565b6000805460ff1916600117905580156109ee576000805461ff0019166101001790555b6109f9848484610fd5565b8015610a3f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b610a4d610b75565b610a3f848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c0492505050565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190611c39565b905090565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610ad9565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610bb657506004546001600160a01b031633145b610c025760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e7460448201526064016104ce565b565b600080846001600160a01b03168484604051610c209190611c76565b60006040518083038185875af1925050503d8060008114610c5d576040519150601f19603f3d011682016040523d82523d6000602084013e610c62565b606091505b50915091508161057e57805160208201fd5b610661610f84565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cb457610caf8361100b565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d0e575060408051601f3d908101601f19168201909252610d0b91810190611c39565b60015b610d715760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104ce565b600080516020611cdc8339815191528114610de05760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104ce565b50610caf8383836110a7565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c025760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016104ce565b600080610ebe836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610f0e610ed1610140860186611b34565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506110cc9050565b6004546001600160a01b03908116911614610f2d57600191505061047f565b5060009392505050565b801561066157604051600090339060001990849084818181858888f193505050503d806000811461057e576040519150601f19603f3d011682016040523d82523d6000602084013e61057e565b6004546001600160a01b0316331480610f9c57503330145b610c025760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016104ce565b6001839055610fe6600283816114cb565b50600480546001600160a01b0319166001600160a01b03929092169190911790555050565b6001600160a01b0381163b6110785760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104ce565b600080516020611cdc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6110b0836110f0565b6000825111806110bd5750805b15610caf57610a3f8383611130565b60008060006110db8585611155565b915091506110e88161119a565b509392505050565b6110f98161100b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106838383604051806060016040528060278152602001611cfc602791396112e4565b600080825160410361118b5760208301516040840151606085015160001a61117f8782858561135c565b94509450505050611193565b506000905060025b9250929050565b60008160048111156111ae576111ae611c92565b036111b65750565b60018160048111156111ca576111ca611c92565b036112175760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104ce565b600281600481111561122b5761122b611c92565b036112785760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104ce565b600381600481111561128c5761128c611c92565b036106615760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104ce565b6060600080856001600160a01b0316856040516113019190611c76565b600060405180830381855af49150503d806000811461133c576040519150601f19603f3d011682016040523d82523d6000602084013e611341565b606091505b509150915061135286838387611420565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113935750600090506003611417565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156113e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661141057600060019250925050611417565b9150600090505b94509492505050565b6060831561148f578251600003611488576001600160a01b0385163b6114885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104ce565b5081611499565b61149983836114a1565b949350505050565b8151156114b15781518083602001fd5b8060405162461bcd60e51b81526004016104ce9190611ca8565b82600281019282156114f9579160200282015b828111156114f95782518255916020019190600101906114de565b50611505929150611509565b5090565b5b80821115611505576000815560010161150a565b6001600160a01b038116811461066157600080fd5b803561153e8161151e565b919050565b60008083601f84011261155557600080fd5b5081356001600160401b0381111561156c57600080fd5b60208301915083602082850101111561119357600080fd5b60008060008060008060008060c0898b0312156115a057600080fd5b88356115ab8161151e565b975060208901356115bb8161151e565b965060408901356115cb8161151e565b95506060890135945060808901356001600160401b03808211156115ee57600080fd5b6115fa8c838d01611543565b909650945060a08b013591508082111561161357600080fd5b506116208b828c01611543565b999c989b5096995094979396929594505050565b60006020828403121561164657600080fd5b81356001600160e01b03198116811461068357600080fd5b60008060008060006080868803121561167657600080fd5b85356116818161151e565b945060208601356116918161151e565b93506040860135925060608601356001600160401b038111156116b357600080fd5b6116bf88828901611543565b969995985093965092949392505050565b60008083601f8401126116e257600080fd5b5081356001600160401b038111156116f957600080fd5b6020830191508360208260051b850101111561119357600080fd5b6000806000806040858703121561172a57600080fd5b84356001600160401b038082111561174157600080fd5b61174d888389016116d0565b9096509450602087013591508082111561176657600080fd5b50611773878288016116d0565b95989497509550505050565b60006020828403121561179157600080fd5b81356106838161151e565b6000806000606084860312156117b157600080fd5b83356001600160401b038111156117c757600080fd5b840161016081870312156117da57600080fd5b95602085013595506040909401359392505050565b6000806040838503121561180257600080fd5b823561180d8161151e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118595761185961181b565b604052919050565b6000806040838503121561187457600080fd5b823561187f8161151e565b91506020838101356001600160401b038082111561189c57600080fd5b818601915086601f8301126118b057600080fd5b8135818111156118c2576118c261181b565b6118d4601f8201601f19168501611831565b915080825287848285010111156118ea57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020828403121561191a57600080fd5b5035919050565b60008060006080848603121561193657600080fd5b83359250602085603f86011261194b57600080fd5b604051604081018181106001600160401b038211171561196d5761196d61181b565b60405280606087018881111561198257600080fd5b8388015b8181101561199d5780358352918401918401611986565b508295506119aa81611533565b9450505050509250925092565b600080600080606085870312156119cd57600080fd5b84356119d88161151e565b93506020850135925060408501356001600160401b038111156119fa57600080fd5b61177387828801611543565b60008060008060008060008060a0898b031215611a2257600080fd5b8835611a2d8161151e565b97506020890135611a3d8161151e565b965060408901356001600160401b0380821115611a5957600080fd5b611a658c838d016116d0565b909850965060608b0135915080821115611a7e57600080fd5b611a8a8c838d016116d0565b909650945060808b013591508082111561161357600080fd5b60008060008060008060a08789031215611abc57600080fd5b8635611ac78161151e565b95506020870135611ad78161151e565b9450604087013593506060870135925060808701356001600160401b03811115611b0057600080fd5b611b0c89828a01611543565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611b4b57600080fd5b8301803591506001600160401b03821115611b6557600080fd5b60200191503681900382131561119357600080fd5b600060018201611b9a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611c4b57600080fd5b5051919050565b60005b83811015611c6d578181015183820152602001611c55565b50506000910152565b60008251611c88818460208701611c52565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6020815260008251806020840152611cc7816040850160208701611c52565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000811000a";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    curve: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleAccount> {
    return super.deploy(
      anEntryPoint,
      curve,
      overrides || {}
    ) as Promise<SimpleAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    curve: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, curve, overrides || {});
  }
  override attach(address: string): SimpleAccount {
    return super.attach(address) as SimpleAccount;
  }
  override connect(signer: Signer): SimpleAccount__factory {
    return super.connect(signer) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new utils.Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleAccount {
    return new Contract(address, _abi, signerOrProvider) as SimpleAccount;
  }
}
