/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  EllipticCurve,
  EllipticCurveInterface,
} from "../../../contracts/account-abstraction/EllipticCurve";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "addAndReturnProjectivePoint",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "P",
        type: "uint256[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
    ],
    name: "addProj",
    outputs: [
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
    ],
    name: "isZeroCurve",
    outputs: [
      {
        internalType: "bool",
        name: "isZero",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
    ],
    name: "multipleGeneratorByScalar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "multiplyPowerBase2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
    ],
    name: "multiplyScalar",
    outputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z0",
        type: "uint256",
      },
    ],
    name: "toAffinePoint",
    outputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
    ],
    name: "toProjectivePoint",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "P",
        type: "uint256[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
    ],
    name: "twice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z0",
        type: "uint256",
      },
    ],
    name: "twiceProj",
    outputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "rs",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "Q",
        type: "uint256[2]",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroAffine",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroProj",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506110c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063713eca2811610097578063c30cfa2d11610066578063c30cfa2d14610205578063c80edca414610218578063e022d77c1461022b578063f214aba01461023e57600080fd5b8063713eca28146101b757806372fb4a14146101d75780637ec8da8d146101ea57806384dfba46146101fd57600080fd5b80630b0dbcfa116100d35780630b0dbcfa1461015d57806314c6706014610170578063322b24aa14610191578063675ca043146101a457600080fd5b806304e960d7146100fa57806309d3ef31146101225780630afb4ddc1461014a575b600080fd5b61010d610108366004610e3e565b610251565b60405190151581526020015b60405180910390f35b610135610130366004610e7c565b6103f2565b60408051928352602083019190915201610119565b610135610158366004610e9e565b610421565b61010d61016b366004610e7c565b610478565b60006001815b60408051938452602084019290925290820152606001610119565b61013561019f366004610eb7565b61056a565b6101356101b2366004610eb7565b6105bb565b6101ca6101c5366004610ee3565b61060b565b6040516101199190610f15565b6101356101e5366004610eb7565b61063c565b6101ca6101f8366004610e7c565b61070b565b600080610135565b61010d610213366004610e7c565b610764565b610176610226366004610eb7565b610788565b610135610239366004610ee3565b6109dc565b61017661024c366004610f46565b610a11565b815160009015806102715750825160008051602061109483398151915211155b8061027e57506020830151155b1561028b575060006103eb565b8151602083015161029c9190610478565b6102a8575060006103eb565b6000808080806102cd8860016020020151600080516020611094833981519152610b16565b905061032b7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2967f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5600080516020611094833981519152848d0961063c565b885160208a01518b51939850919550610359929091906000805160206110948339815191529085900961063c565b9094509150600061036c8685878661060b565b604081015190915060000361038a57600096505050505050506103eb565b60006103ab8260026020020151600160601b63ffffffff60c01b0319610b16565b9050600160601b63ffffffff60c01b0319808283098351098a519091506103e060008051602061109483398151915283610f9f565b149750505050505050505b9392505050565b600080600061040385856001610788565b919650945090506104158585836105bb565b92509250509250929050565b60008061046f7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2967f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f58561063c565b91509150915091565b60008215806104945750600160601b63ffffffff60c01b031983145b8061049d575081155b806104b55750600160601b63ffffffff60c01b031982145b156104c257506000610564565b6000600160601b63ffffffff60c01b031983840990506000600160601b63ffffffff60c01b031985600160601b63ffffffff60c01b0319878809099050600160601b63ffffffff60c01b0319806bfffffffffffffffffffffffd63ffffffff60c01b0319870982089050600160601b63ffffffff60c01b03197f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b820890501490505b92915050565b60008084846001835b8681101561059f57610586848484610788565b919550935091508061059781610fc9565b915050610573565b506105ab8383836105bb565b945094505050505b935093915050565b60008060006105d884600160601b63ffffffff60c01b0319610b16565b9050600160601b63ffffffff60c01b03198187099250600160601b63ffffffff60c01b0319818609915050935093915050565b610613610da2565b600080610622878787876109dc565b9092509050610631828261070b565b979650505050505050565b60008082600003610654576000805b915091506105b3565b826001036106665750839050826105b3565b826002036106785761064b85856103f2565b5083905082818160018061068d600288610f9f565b60000361069c57600094508495505b600187901c96505b86156106f0576106b5848484610788565b919550935091506106c7600288610f9f565b6001036106e4576106dc848484898986610a11565b919750955090505b600187901c96506106a4565b6106fb8686836105bb565b9550955050505050935093915050565b610713610da2565b600160601b63ffffffff60c01b0319600160000860408201819052600160601b63ffffffff60c01b031990840981526040810151600160601b63ffffffff60c01b0319908309602082015292915050565b600082158015610772575081155b1561077f57506001610564565b50600092915050565b600080600080600080600061079d8a8a610764565b156107b6576000600181965096509650505050506109d3565b600160601b63ffffffff60c01b0319888a099250600160601b63ffffffff60c01b0319600284099250600160601b63ffffffff60c01b03198a84099150600160601b63ffffffff60c01b03198983099150600160601b63ffffffff60c01b0319600283099150600160601b63ffffffff60c01b03198a8b099950600160601b63ffffffff60c01b031960038b099350600160601b63ffffffff60c01b03198889099750600160601b63ffffffff60c01b03196bfffffffffffffffffffffffd63ffffffff60c01b031989099750600160601b63ffffffff60c01b03198885089350600160601b63ffffffff60c01b03198485099050600160601b63ffffffff60c01b0319826002099950600160601b63ffffffff60c01b03196108e78b600160601b63ffffffff60c01b0319610fe2565b82089050600160601b63ffffffff60c01b031961091282600160601b63ffffffff60c01b0319610fe2565b83089950600160601b63ffffffff60c01b03198a85099950600160601b63ffffffff60c01b0319838a099850600160601b63ffffffff60c01b0319898a099850600160601b63ffffffff60c01b0319896002099850600160601b63ffffffff60c01b031961098e8a600160601b63ffffffff60c01b0319610fe2565b8b089550600160601b63ffffffff60c01b03198184099650600160601b63ffffffff60c01b03198384099450600160601b63ffffffff60c01b03198386099450505050505b93509350939050565b60008060006109f18787600188886001610a11565b91985096509050610a038787836105bb565b925092505094509492505050565b6000806000806000806000610a268d8d610764565b15610a3d5789898996509650965050505050610b0a565b610a478a8a610764565b15610a5e578c8c8c96509650965050505050610b0a565b600160601b63ffffffff60c01b0319888d099350600160601b63ffffffff60c01b03198b8a099250600160601b63ffffffff60c01b0319888e099150600160601b63ffffffff60c01b03198b8b099050808203610ae057828403610ad657610ac78d8d8d610788565b96509650965050505050610b0a565b6000600181610ac7565b610afe600160601b63ffffffff60c01b0319898d0983838688610bd6565b91985096509450505050505b96509650969350505050565b6000821580610b2457508183145b80610b2d575081155b15610b3a57506000610564565b81831115610b4f57610b4c8284610f9f565b92505b600060018385835b8115610ba257610b678284610ff5565b905083610b748183611009565b610b7e9087611039565b83610b898185611060565b610b939087610fe2565b92975090955093509150610b57565b6000851215610bca57610bb485611077565b610bbe9088610fe2565b95505050505050610564565b50929695505050505050565b600080808080808080600160601b63ffffffff60c01b0319610c068b600160601b63ffffffff60c01b0319610fe2565b8a089050600160601b63ffffffff60c01b0319610c318c600160601b63ffffffff60c01b0319610fe2565b8d089450600160601b63ffffffff60c01b03198586099350600160601b63ffffffff60c01b03198182099150600160601b63ffffffff60c01b03198d83099150600160601b63ffffffff60c01b03198c8c089a50600160601b63ffffffff60c01b0319848c099a50600160601b63ffffffff60c01b0319610cc08c600160601b63ffffffff60c01b0319610fe2565b83089150600160601b63ffffffff60c01b03198286099750600160601b63ffffffff60c01b03198585099250600160601b63ffffffff60c01b0319848d099b50600160601b63ffffffff60c01b0319610d2783600160601b63ffffffff60c01b0319610fe2565b8d089b50600160601b63ffffffff60c01b03198c82099050600160601b63ffffffff60c01b0319838a099850600160601b63ffffffff60c01b0319610d7a8a600160601b63ffffffff60c01b0319610fe2565b82089650600160601b63ffffffff60c01b03198d840995505050505050955095509592505050565b60405180606001604052806003906020820280368337509192915050565b600082601f830112610dd157600080fd5b6040516040810181811067ffffffffffffffff82111715610e0257634e487b7160e01b600052604160045260246000fd5b8060405250806040840185811115610e1957600080fd5b845b81811015610e33578035835260209283019201610e1b565b509195945050505050565b600080600060a08486031215610e5357600080fd5b83359250610e648560208601610dc0565b9150610e738560608601610dc0565b90509250925092565b60008060408385031215610e8f57600080fd5b50508035926020909101359150565b600060208284031215610eb057600080fd5b5035919050565b600080600060608486031215610ecc57600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215610ef957600080fd5b5050823594602084013594506040840135936060013592509050565b60608101818360005b6003811015610f3d578151835260209283019290910190600101610f1e565b50505092915050565b60008060008060008060c08789031215610f5f57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052601260045260246000fd5b600082610fae57610fae610f89565b500690565b634e487b7160e01b600052601160045260246000fd5b600060018201610fdb57610fdb610fb3565b5060010190565b8181038181111561056457610564610fb3565b60008261100457611004610f89565b500490565b80820260008212600160ff1b8414161561102557611025610fb3565b818105831482151761056457610564610fb3565b818103600083128015838313168383128216171561105957611059610fb3565b5092915050565b808202811582820484141761056457610564610fb3565b6000600160ff1b820161108c5761108c610fb3565b506000039056feffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551a164736f6c6343000811000a";

type EllipticCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EllipticCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EllipticCurve__factory extends ContractFactory {
  constructor(...args: EllipticCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EllipticCurve> {
    return super.deploy(overrides || {}) as Promise<EllipticCurve>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EllipticCurve {
    return super.attach(address) as EllipticCurve;
  }
  override connect(signer: Signer): EllipticCurve__factory {
    return super.connect(signer) as EllipticCurve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EllipticCurveInterface {
    return new utils.Interface(_abi) as EllipticCurveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EllipticCurve {
    return new Contract(address, _abi, signerOrProvider) as EllipticCurve;
  }
}
